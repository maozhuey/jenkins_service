version: '3.8'

services:
  # TBK Development Application - Public Access
  tbk-dev-public:
    image: node:18-alpine
    container_name: tbk-dev-public
    ports:
      - "3000:3000"
    volumes:
      - /Users/hanchanglin/Documents/知农/桃百科/tbk:/app
    working_dir: /app
    command: sh -c "npm install && npm start"
    environment:
      - NODE_ENV=development
      - PORT=3000
    networks:
      - tbk-public-network
    restart: unless-stopped
    depends_on:
      - mysql-public
      - redis-public

  # Nginx Reverse Proxy for Public Access
  nginx-public:
    image: nginx:alpine
    container_name: nginx-tbk-public
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
    volumes:
      - ./nginx/public.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    networks:
      - tbk-public-network
    depends_on:
      - tbk-dev-public
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for Session Management (Public Environment)
  redis-public:
    image: redis:7-alpine
    container_name: redis-tbk-public
    ports:
      - "0.0.0.0:6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD:-han0419}
    volumes:
      - redis-public-data:/data
    networks:
      - tbk-public-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MySQL Development Database (Public Access)
  mysql-public:
    image: mysql:8.0
    container_name: mysql-tbk-public
    ports:
      - "0.0.0.0:3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-han0419/}
      MYSQL_DATABASE: ${DB_NAME:-tbk_dev}
      MYSQL_USER: ${DB_USER:-tbk_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-han0419/}
    volumes:
      - mysql-public-data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    networks:
      - tbk-public-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Monitoring and Logging
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer-tbk
    ports:
      - "0.0.0.0:9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data
    networks:
      - tbk-public-network
    restart: unless-stopped

networks:
  tbk-public-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  mysql-public-data:
    driver: local
  redis-public-data:
    driver: local
  portainer-data:
    driver: local